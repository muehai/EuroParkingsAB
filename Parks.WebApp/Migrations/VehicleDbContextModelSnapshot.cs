// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Parks.WebApp.Data;
using System;

namespace Parks.WebApp.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    partial class VehicleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Parks.WebApp.Models.Entities.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("OwnerPersonalId")
                        .IsRequired();

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("Parks.WebApp.Models.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<int>("ParkeringSpaceId");

                    b.Property<DateTime>("ParkingTime");

                    b.Property<string>("RegisterNr")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<int>("VehicleOwnersId");

                    b.Property<string>("VehicleTypeName")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<int?>("VehicleTypesNamesId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleOwnersId");

                    b.HasIndex("VehicleTypesNamesId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Parks.WebApp.Models.Entities.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("Parks.WebApp.Models.Entities.Vehicle", b =>
                {
                    b.HasOne("Parks.WebApp.Models.Entities.Owner", "VehicleOwners")
                        .WithMany("VehiclesOwnerList")
                        .HasForeignKey("VehicleOwnersId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Parks.WebApp.Models.Entities.VehicleType", "VehicleTypesNames")
                        .WithMany("VehiclesList")
                        .HasForeignKey("VehicleTypesNamesId");
                });
#pragma warning restore 612, 618
        }
    }
}
